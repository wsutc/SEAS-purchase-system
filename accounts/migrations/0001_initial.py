# Generated by Django 4.0.3 on 2022-09-19 23:21

import datetime

import django.db.models.deletion
import djmoney.models.fields
from django.db import migrations, models
from django.utils.timezone import utc

from purchases.migrations.zerozerozeroone_first_squash import CURRENCY_CHOICES


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "purchases",
            "migration_tools",  # noqa: E501
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(editable=False, unique=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "name",
                    models.CharField(
                        help_text="human-readable description of account",
                        max_length=200,
                        verbose_name="account title",
                    ),
                ),
                (
                    "account",
                    models.CharField(
                        help_text="in form XXXX-XXXX.",
                        max_length=10,
                        unique=True,
                        verbose_name="account",
                    ),
                ),
                (
                    "budget_code",
                    models.CharField(
                        help_text="usually first four characters of account",
                        max_length=5,
                        verbose_name="budget code",
                    ),
                ),
                (
                    "fund_type",
                    models.CharField(
                        choices=[("GR", "Grant"), ("GF", "Gift"), ("PG", "Program")],
                        default="PG",
                        max_length=30,
                        verbose_name="fund type",
                    ),
                ),
                (
                    "fund",
                    models.CharField(
                        help_text="e.g. PG0005301 or GF003343",
                        max_length=30,
                        unique=True,
                        verbose_name="fund",
                    ),
                ),
                ("cost_center", models.CharField(max_length=15, null=True)),
                (
                    "starting_balance_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=CURRENCY_CHOICES,
                        default="USD",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "starting_balance",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="USD",
                        max_digits=14,
                        verbose_name="starting balance",
                    ),
                ),
                (
                    "starting_balance_datetime",
                    models.DateTimeField(
                        help_text="date and time that starting balance is valid from"
                    ),
                ),
                (
                    "current_balance_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=CURRENCY_CHOICES,
                        default="USD",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "current_balance",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="USD",
                        max_digits=14,
                        verbose_name="current balance",
                    ),
                ),
                ("changed_datetime", models.DateTimeField(auto_now=True)),
                (
                    "in_use",
                    models.BooleanField(
                        default=True, verbose_name="account in active use"
                    ),
                ),
            ],
            options={
                "ordering": ["account"],
            },
        ),
        migrations.CreateModel(
            name="BaseTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=CURRENCY_CHOICES,
                        default="USD",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="USD",
                        help_text="positive values increase balance, negative decrease",
                        max_digits=14,
                        verbose_name="amount",
                    ),
                ),
                (
                    "date_time",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2022, 9, 19, 23, 21, 4, 906668, tzinfo=utc
                        ),
                        verbose_name="time and date that adjustment affects balance",
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.account",
                    ),
                ),
            ],
            options={
                "ordering": ["date_time"],
            },
        ),
        migrations.CreateModel(
            name="BalanceAdjustment",
            fields=[
                (
                    "basetransaction_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="accounts.basetransaction",
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        max_length=200, verbose_name="reason for adjustment"
                    ),
                ),
            ],
            bases=("accounts.basetransaction",),
        ),
        migrations.CreateModel(
            name="AccountGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(editable=False, unique=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="group name"
                    ),
                ),
                (
                    "accounts",
                    models.ManyToManyField(
                        to="accounts.account", verbose_name="accounts"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "account groups",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "basetransaction_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="accounts.basetransaction",
                    ),
                ),
                (
                    "purchase_request",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="purchases.purchaserequest",
                    ),
                ),
            ],
            bases=("accounts.basetransaction",),
        ),
    ]
